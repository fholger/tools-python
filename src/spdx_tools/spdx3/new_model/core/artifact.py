# SPDX-License-Identifier: Apache-2.0
#
# This file was auto-generated by dev/gen_python_model_from_spec.py
# Do not manually edit!
# flake8: noqa

from abc import abstractmethod
from dataclasses import field
from datetime import datetime

from beartype.typing import List, Optional

from spdx_tools.common.typing.dataclass_with_properties import dataclass_with_properties

from ..core.element import Element


@dataclass_with_properties
class Artifact(Element):
    """
    An artifact is a distinct article or unit within the digital domain, such as an electronic file, a software
    package, a device or an element of data.
    """

    originated_by: List[str] = field(default_factory=list)
    """
    OriginatedBy identifies from where or whom the Element originally came.
    """
    supplied_by: List[str] = field(default_factory=list)
    """
    Identify the actual distribution source for the Artifact being referenced. This might or might not be different
    from the originating distribution source for the artifact.
    """
    built_time: Optional[datetime] = None
    """
    A builtTime specifies the time an artifact was built.
    """
    release_time: Optional[datetime] = None
    """
    A releaseTime specifies the time an artifact was released.
    """
    valid_until_time: Optional[datetime] = None
    """
    A validUntilTime specifies until when the artifact can be used before its usage needs to be reassessed.
    """
    standard: List[str] = field(default_factory=list)
    """
    Various standards may be relevant to useful to capture for specific artifacts.
    """

    @abstractmethod
    def __init__(self):
        pass
