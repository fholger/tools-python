# SPDX-License-Identifier: Apache-2.0
#
# This file was auto-generated by dev/gen_python_model_from_spec.py
# Do not manually edit!

from ..core import CreationInfo, Element, ExternalIdentifier, ExternalReference, IntegrityMethod
from beartype.typing import List, Optional
from datetime import datetime
from spdx_tools.common.typing.type_checks import check_types_and_set_values

from spdx_tools.common.typing.dataclass_with_properties import dataclass_with_properties


@dataclass_with_properties
class Vulnerability(Element):
    """
    Specifies a vulnerability and its associated information.

    **Syntax**

    ```json
    {
      "@type": "Vulnerability",
      "@id": "urn:spdx.dev:vuln-1",
      "summary": "Use of a Broken or Risky Cryptographic Algorithm",
      "description": "The npm package `elliptic` before version 6.5.4 are vulnerable to Cryptographic Issues via the secp256k1 implementation in elliptic/ec/key.js. There is no check to confirm that the public key point passed into the derive function actually exists on the secp256k1 curve. This results in the potential for the private key used in this implementation to be revealed after a number of ECDH operations are performed.",      
      "modified": "2021-03-08T16:02:43Z",
      "published": "2021-03-08T16:06:50Z",
      "externalIdentifiers": [
        {
          "@type": "ExternalIdentifier",
          "externalIdentifierType": "cve",
          "identifier": "CVE-2020-2849",
          "identifierLocator": [
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-28498",
            "https://www.cve.org/CVERecord?id=CVE-2020-28498"
          ],
          "issuingAuthority": "urn:spdx.dev:agent-cve.org"
        },
        {
          "type": "ExternalIdentifier",
          "externalIdentifierType": "securityOther",
          "identifier": "GHSA-r9p9-mrjm-926w",
          "identifierLocator": "https://github.com/advisories/GHSA-r9p9-mrjm-926w"
        },
        {
          "type": "ExternalIdentifier",
          "externalIdentifierType": "securityOther",
          "identifier": "SNYK-JS-ELLIPTIC-1064899",
          "identifierLocator": "https://security.snyk.io/vuln/SNYK-JS-ELLIPTIC-1064899"
        }
      ],
      "externalReferences": [
        {
            "@type": "ExternalReference",
            "externalReferenceType": "securityAdvisory",
            "locator": "https://nvd.nist.gov/vuln/detail/CVE-2020-28498"
        },
        {
          "@type": "ExternalReference",
          "externalReferenceType": "securityAdvisory",
          "locator": "https://ubuntu.com/security/CVE-2020-28498"
        },
        {
          "@type": "ExternalReference",
          "externalReferenceType": "securityOther",
          "locator": "https://github.com/indutny/elliptic/pull/244/commits"
        },
        {
          "@type": "ExternalReference",
          "externalReferenceType": "securityOther",
          "locator": "https://github.com/christianlundkvist/blog/blob/master/2020_05_26_secp256k1_twist_attacks/secp256k1_twist_attacks.md"
        }
      ]
    },
    {
      "@type": "Relationship",
      "@id": "urn:spdx.dev:vulnRelationship-1",
      "relationshipType": "hasAssociatedVulnerability",
      "from": "urn:npm-elliptic-6.5.2",
      "to": ["urn:spdx.dev:vuln-1"],
      "startTime": "2021-03-08T16:06:50Z"
    },
    {
      "@type": "Relationship",
      "@id": "urn:spdx.dev:vulnAgentRel-1",  
      "relationshipType": "publishedBy",  
      "from": "urn:spdx.dev:vuln-1",
      "to": ["urn:spdx.dev:agent-snyk"],
      "startTime": "2021-03-08T16:06:50Z"
    }
    ```
    """
    published_time: Optional[datetime] = None
    """
    Specifies the time when a vulnerability was first published.
    """
    modified_time: Optional[datetime] = None
    """
    Specifies a time when a vulnerability assessment was last modified.
    """
    withdrawn_time: Optional[datetime] = None
    """
    Specified the time and date when a vulnerability was withdrawn.
    """

    def __init__(
        self,
        spdx_id: str,
        creation_info: CreationInfo,
        name: Optional[str] = None,
        summary: Optional[str] = None,
        description: Optional[str] = None,
        comment: Optional[str] = None,
        verified_using: List[IntegrityMethod] = None,
        external_reference: List[ExternalReference] = None,
        external_identifier: List[ExternalIdentifier] = None,
        extension: List[str] = None,
        published_time: Optional[datetime] = None,
        modified_time: Optional[datetime] = None,
        withdrawn_time: Optional[datetime] = None,
    ):
        verified_using = [] if verified_using is None else verified_using
        external_reference = [] if external_reference is None else external_reference
        external_identifier = [] if external_identifier is None else external_identifier
        extension = [] if extension is None else extension
        check_types_and_set_values(self, locals())
