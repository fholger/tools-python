# SPDX-License-Identifier: Apache-2.0
#
# This file was auto-generated by dev/gen_python_model_from_spec.py
# Do not manually edit!

from ..core import HashAlgorithm, IntegrityMethod
from beartype.typing import Optional
from spdx_tools.common.typing.type_checks import check_types_and_set_values

from spdx_tools.common.typing.dataclass_with_properties import dataclass_with_properties


@dataclass_with_properties
class Hash(IntegrityMethod):
    """
    A hash is a grouping of characteristics unique to the result of applying a mathematical algorithm that maps data of
    arbitrary size to a bit string (the hash) and is a one-way function, that is, a function which is practically
    infeasible to invert. This is commonly used for integrity checking of data.
    """
    algorithm: HashAlgorithm
    """
    An algorithm specifies the algorithm that was used for calculating the hash value.
    """
    hash_value: str
    """
    HashValue is the result of applying a hash algorithm to an Element.
    """

    def __init__(
        self,
        algorithm: HashAlgorithm,
        hash_value: str,
        comment: Optional[str] = None,
    ):
        check_types_and_set_values(self, locals())
