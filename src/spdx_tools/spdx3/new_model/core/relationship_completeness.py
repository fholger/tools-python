# SPDX-License-Identifier: Apache-2.0
#
# This file was auto-generated by dev/gen_python_model_from_spec.py
# Do not manually edit!
# flake8: noqa

from enum import Enum, auto

from beartype.typing import Optional


class RelationshipCompleteness(Enum):
    """
    RelationshipCompleteness indicates whether a relationship is complete or known to be incomplete or if there is made
    no assertion either way.
    """

    INCOMPLETE = auto()
    """
    The relationship is known not to be exhaustive.
    """
    COMPLETE = auto()
    """
    The relationship is known to be exhaustive.
    """
    NO_ASSERTION = auto()
    """
    There can be made no assertion about the completeness of the relationship.
    """

    def __str__(self) -> str:
        if self == RelationshipCompleteness.INCOMPLETE:
            return "incomplete"
        if self == RelationshipCompleteness.COMPLETE:
            return "complete"
        if self == RelationshipCompleteness.NO_ASSERTION:
            return "noAssertion"
        return "unknown"

    @staticmethod
    def from_str(value: str) -> Optional["RelationshipCompleteness"]:
        if value == "incomplete":
            return RelationshipCompleteness.INCOMPLETE
        if value == "complete":
            return RelationshipCompleteness.COMPLETE
        if value == "noAssertion":
            return RelationshipCompleteness.NO_ASSERTION
        return None
