# SPDX-License-Identifier: Apache-2.0
#
# This file was auto-generated by dev/gen_python_model_from_spec.py
# Do not manually edit!

from ..core import IntegrityMethod
from abc import ABC
from beartype.typing import List, Optional
from dataclasses import field
from spdx_tools.common.typing.type_checks import check_types_and_set_values

from spdx_tools.common.typing.dataclass_with_properties import dataclass_with_properties


@dataclass_with_properties
class ExternalMap(ABC):
    """
    An External Map is a map of Element identifiers that are used within a Document but defined external to that
    Document. The external map provides details about the externally-defined Element such as its provenance, where to
    retrieve it, and how to verify its integrity.
    """
    external_id: str
    """
    ExternalId identifies an external Element used within a Document but defined external to that Document.
    """
    verified_using: List[IntegrityMethod] = field(default_factory=list)
    """
    VerifiedUsing provides an IntegrityMethod with which the integrity of an Element can be asserted.
    """
    location_hint: Optional[str] = None
    """
    A locationHint provides an indication of where to retrieve an external Element.
    """
    defining_document: Optional[str] = None
    """
    A definingDocument property is used to link an Element identifier to an SpdxDocument which contains the definition
    for the Element.
    """

    def __init__(
        self,
        external_id: str,
        verified_using: List[IntegrityMethod] = None,
        location_hint: Optional[str] = None,
        defining_document: Optional[str] = None,
    ):
        verified_using = [] if verified_using is None else verified_using
        check_types_and_set_values(self, locals())
