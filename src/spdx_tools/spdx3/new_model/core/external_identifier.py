# SPDX-License-Identifier: Apache-2.0
#
# This file was auto-generated by dev/gen_python_model_from_spec.py
# Do not manually edit!

from ..core import ExternalIdentifierType
from abc import ABC
from beartype.typing import List, Optional
from dataclasses import field
from spdx_tools.common.typing.type_checks import check_types_and_set_values

from spdx_tools.common.typing.dataclass_with_properties import dataclass_with_properties


@dataclass_with_properties
class ExternalIdentifier(ABC):
    """
    An ExternalIdentifier is a reference to a resource outside the scope of SPDX-3.0 content that uniquely identifies an
    Element.
    """
    external_identifier_type: ExternalIdentifierType
    """
    An externalIdentifierType specifies the type of the external identifier.
    """
    identifier: str
    """
    An identifier uniquely identifies an external element.
    """
    comment: Optional[str] = None
    """
    A comment is an optional field for creators of the Element to provide comments to the readers/reviewers of the
    document.
    """
    identifier_locator: List[str] = field(default_factory=list)
    """
    A identifierLocator is TODO
    """
    issuing_authority: Optional[str] = None
    """
    A issuingAuthority is TODO
    """

    def __init__(
        self,
        external_identifier_type: ExternalIdentifierType,
        identifier: str,
        comment: Optional[str] = None,
        identifier_locator: List[str] = None,
        issuing_authority: Optional[str] = None,
    ):
        identifier_locator = [] if identifier_locator is None else identifier_locator
        check_types_and_set_values(self, locals())
