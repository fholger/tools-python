# SPDX-License-Identifier: Apache-2.0
#
# This file was auto-generated by dev/gen_python_model_from_spec.py
# Do not manually edit!

from beartype.typing import Optional
from enum import Enum, auto


class DependencyConditionalityType(Enum):
    """
    TODO
    """

    OPTIONAL = auto()
    """
    TODOdescription
    """
    REQUIRED = auto()
    """
    TODOdescription
    """
    PROVIDED = auto()
    """
    TODOdescription
    """
    PREREQUISITE = auto()
    """
    TODOdescription
    """
    OTHER = auto()
    """
    TODOdescription
    """

    def __str__(self) -> str:
        if self == DependencyConditionalityType.OPTIONAL:
            return "optional"
        if self == DependencyConditionalityType.REQUIRED:
            return "required"
        if self == DependencyConditionalityType.PROVIDED:
            return "provided"
        if self == DependencyConditionalityType.PREREQUISITE:
            return "prerequisite"
        if self == DependencyConditionalityType.OTHER:
            return "other"
        return "unknown"

    @staticmethod
    def from_str(value: str) -> Optional['DependencyConditionalityType']:
        if value == "optional":
            return DependencyConditionalityType.OPTIONAL
        if value == "required":
            return DependencyConditionalityType.REQUIRED
        if value == "provided":
            return DependencyConditionalityType.PROVIDED
        if value == "prerequisite":
            return DependencyConditionalityType.PREREQUISITE
        if value == "other":
            return DependencyConditionalityType.OTHER
        return None
