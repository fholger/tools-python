# SPDX-License-Identifier: Apache-2.0
#
# This file was auto-generated by dev/gen_python_model_from_spec.py
# Do not manually edit!
# flake8: noqa

from abc import abstractmethod

from beartype.typing import Optional

from spdx_tools.common.typing.dataclass_with_properties import dataclass_with_properties

from ..core import Element


@dataclass_with_properties
class LicenseAddition(Element):
    """
    A LicenseAddition represents text which is intended to be added to a License as additional text, but which is not
    itself intended to be a standalone License.

    It may be an exception which is listed on the SPDX Exceptions List (ListedLicenseException), or may be any other
    additional text (as an exception or otherwise) which is defined by an SPDX data creator (CustomLicenseAddition).
    """

    addition_text: str
    """
    An additionText contains the plain text of the LicenseAddition, without templating or other similar markup.

    Users of the additionText for a License can apply the SPDX Matching Guidelines when comparing it to another text
    for matching purposes.
    """
    standard_addition_template: Optional[str] = None
    """
    A standardAdditionTemplate contains a license addition template which describes sections of the LicenseAddition
    text which can be varied. See the Legacy Text Template format section of the SPDX specification for format
    information.
    """
    is_deprecated_addition_id: Optional[bool] = None
    """
    The isDeprecatedAdditionId property specifies whether an identifier for a LicenseAddition has been marked as
    deprecated. If the property is not defined, then it is presumed to be false (i.e., not deprecated).

    If the LicenseAddition is included on the SPDX Exceptions List, then the `deprecatedVersion` property indicates on
    which version release of the Exceptions List it was first marked as deprecated.

    "Deprecated" in this context refers to deprecating the use of the _identifier_, not the underlying license
    addition. In other words, even if a LicenseAddition's author or steward has stated that a particular
    LicenseAddition generally should not be used, that would _not_ mean that the LicenseAddition's identifier is
    "deprecated." Rather, a LicenseAddition operator is typically marked as "deprecated" when it is determined that use
    of another identifier is preferable.
    """
    obsoleted_by: Optional[str] = None
    """
    An obsoletedBy value for a deprecated License or LicenseAddition specifies the licenseId of the replacement License
    or LicenseAddition that is preferred to be used in its place. It should use the same format as specified for a
    licenseId.

    The License's or LicenseAddition's comment value may include more information about the reason why the licenseId
    specified in the obsoletedBy value is preferred.
    """

    @abstractmethod
    def __init__(self):
        pass
