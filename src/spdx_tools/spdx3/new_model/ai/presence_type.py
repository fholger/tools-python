# SPDX-License-Identifier: Apache-2.0
#
# This file was auto-generated by dev/gen_python_model_from_spec.py
# Do not manually edit!

from beartype.typing import Optional
from enum import Enum, auto


class PresenceType(Enum):
    """
    This type is used to indicate if a given field is present or absent or unknown.
    """

    YES = auto()
    """
    Indicates presence of the field.
    """
    NO = auto()
    """
    Indicates absence of the field.
    """
    NO_ASSERTION = auto()
    """
    Makes no assertion about the field.
    """

    def __str__(self) -> str:
        if self == PresenceType.YES:
            return "yes"
        if self == PresenceType.NO:
            return "no"
        if self == PresenceType.NO_ASSERTION:
            return "noAssertion"
        return "unknown"

    @staticmethod
    def from_str(value: str) -> Optional['PresenceType']:
        if value == "yes":
            return PresenceType.YES
        if value == "no":
            return PresenceType.NO
        if value == "noAssertion":
            return PresenceType.NO_ASSERTION
        return None
